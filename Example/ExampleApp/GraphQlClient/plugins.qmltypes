import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable GraphQlClient 1.0 C:\Users\DLehm\source\repos\QmlGraphQl\QmlGraphQl\Example\ExampleApp'

Module {
    dependencies: ["QtQuick 2.12"]
    Component {
        name: "GraphQlConnection"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["GraphQlClient/GraphQlConnection 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "WebSocketConnectionState"
            values: {
                "Disconnected": 0,
                "Initializing": 1,
                "Acknowledged": 2,
                "Error": 3
            }
        }
        Property { name: "url"; type: "string" }
        Property {
            name: "websocketConnectionState"
            type: "WebSocketConnectionState"
            isReadonly: true
        }
        Property { name: "isConnected"; type: "bool"; isReadonly: true }
        Signal { name: "closed" }
        Signal {
            name: "urlChanged"
            Parameter { name: "url"; type: "string" }
        }
        Signal {
            name: "dataReceived"
            Parameter { name: "data"; type: "QVariantMap" }
        }
        Signal {
            name: "websocketConnectionStateChanged"
            Parameter { name: "state"; type: "WebSocketConnectionState" }
        }
        Signal {
            name: "error"
            Parameter { name: "error"; type: "QVariantMap" }
        }
        Method {
            name: "onConnectionError"
            Parameter { name: "err"; type: "GraphQlError" }
        }
        Method {
            name: "setUrl"
            Parameter { name: "url"; type: "string" }
        }
        Method {
            name: "onStateChanged"
            Parameter { name: "state"; type: "GraphQlWebsocketConnection::ConnectionState" }
        }
        Method {
            name: "query"
            type: "string"
            Parameter { name: "query"; type: "string" }
        }
        Method {
            name: "subscribe"
            type: "string"
            Parameter { name: "subscription"; type: "string" }
        }
        Method {
            name: "unsubscribe"
            Parameter { name: "subscriptionId"; type: "string" }
        }
        Method {
            name: "mutate"
            type: "string"
            Parameter { name: "mutation"; type: "string" }
        }
        Method { name: "open" }
    }
}
